swagger: "2.0"
info:
  description: "It allows you to create a model for CARISA software. CARISA is a platform for the development of real-time information environments. Very suitable for IOT systems. With this API you will be able to control the whole CARISA platform."
  version: "1.0.0"
  title: "CARISA API"
  contact:
    email: "dav.sua.pas@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/api"
tags:
  - name: "instance"
    description: "Instance represents a set of spaces independently of another instance in all system"
  - name: "space"
    description: "The space splits the instance in logic categories"
  - name: "ente"
    description: "The ente are the items of spaces to trace, count, measure, etc."
  - name: "enteprop"
    description: "The ente property are the fields of the ente."
  - name: "category"
    description: "The category represents a hierarchy to organize the entes and how the information spreads between the different categories"
  - name: "categoryprop"
    description: "The category property are the fields of the category. This properties link to other child category properties or the child ente properties."
  - name: "queryplugin"
    description: "The query plugin defines the diferrents types of queries in real-time over the stream datas. This plugins must be registered over the platform. The user could instantiate them it to define their own queries."
schemes:
  - "https"
  - "http"
paths:
  /instances:
    post:
      tags:
        - "instance"
      summary: "Add a new instance to the platform"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Instance object that needs to be added to the platform"
          required: true
          schema:
            $ref: "#/definitions/InstanceReq"
      responses:
        "201":
          description: "Instance created"
          schema:
            $ref: "#/definitions/Instance"
        "302":
          description: "Instance found"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
  /instances/{id}:
    put:
      tags:
        - "instance"
      summary: "If the instance ID exists is updated otherwise is added"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Instance identifier"
          type: string
          required: true
        - in: "body"
          name: "body"
          description: "Instance object that needs to be added or updated to the platform"
          required: true
          schema:
            $ref: "#/definitions/InstanceReq"
      responses:
        "200":
          description: "Instance updated"
          schema:
            $ref: "#/definitions/Instance"
        "201":
          description: "Instance created"
          schema:
            $ref: "#/definitions/Instance"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
    get:
      tags:
        - "instance"
      summary: "Find instance by ID"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Instance identifier"
          type: string
          required: true
      responses:
        "200":
          description: "Instance found"
          schema:
            $ref: "#/definitions/Instance"
        "400":
          description: "Invalid input"
        "404":
          description: "Instance not found"
        "500":
          description: "Internal server error"
  /instances/{id}/spaces:
    get:
      tags:
        - "instance"
      summary: "List spaces of the instance by ID"
      description: "The 'sname' and 'gtname' query parameters are exclusive. The 'top' query parameter must be between 1 and 100."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Instance identifier"
          type: string
          required: true
        - in: "query"
          name: "sname"
          description: "List spaces that start by 'sname'"
          type: string
        - in: "query"
          name: "gtname"
          description: "List spaces greater or equal than 'gtname'"
          type: string
        - in: "query"
          name: "top"
          description: "Limit of spaces"
          type: integer
          minimum: 1
          maximum: 100
      responses:
        "200":
          description: "Successful request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SpaceLink"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
  /spaces:
    post:
      tags:
        - "space"
      summary: "Add a new space to the instance"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Space object that needs to be added to the instance"
          required: true
          schema:
            $ref: "#/definitions/SpaceReq"
      responses:
        "201":
          description: "Space created"
          schema:
            $ref: "#/definitions/Space"
        "302":
          description: "Space found"
        "400":
          description: "Invalid input"
        "404":
          description: "Instance not found"
        "500":
          description: "Internal server error"
  /spaces/{id}:
    put:
      tags:
        - "space"
      summary: "If the space ID exists is updated otherwise is added."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Space identifier"
          type: string
          required: true
        - in: "body"
          name: "body"
          description: "Space object that needs to be added or updated to the instance"
          required: true
          schema:
            $ref: "#/definitions/SpaceReq"
      responses:
        "200":
          description: "Space updated"
          schema:
            $ref: "#/definitions/Space"
        "201":
          description: "Space created"
          schema:
            $ref: "#/definitions/Space"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
    get:
      tags:
        - "space"
      summary: "Find space by ID"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Space identifier"
          type: string
          required: true
      responses:
        "200":
          description: "Space found"
          schema:
            $ref: "#/definitions/Space"
        "400":
          description: "Invalid input"
        "404":
          description: "Space not found"
        "500":
          description: "Internal server error"
  /spaces/{id}/entes:
    get:
      tags:
        - "space"
      summary: "List entes of the space by ID"
      description: "The 'sname' and 'gtname' query parameters are exclusive. The 'top' query parameter must be between 1 and 100."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Space identifier"
          type: string
          required: true
        - in: "query"
          name: "sname"
          description: "List entes that start by 'sname'"
          type: string
        - in: "query"
          name: "gtname"
          description: "List entes greater or equal than 'gtname'"
          type: string
        - in: "query"
          name: "top"
          description: "Limit of entes"
          type: integer
          minimum: 1
          maximum: 100
      responses:
        "200":
          description: "Successful request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EnteLink"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
  /spaces/{id}/categories:
    get:
      tags:
        - "space"
      summary: "List categories of the space by ID"
      description: "The 'sname' and 'gtname' query parameters are exclusive. The 'top' query parameter must be between 1 and 100."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Space identifier"
          type: string
          required: true
        - in: "query"
          name: "sname"
          description: "List categories that start by 'sname'"
          type: string
        - in: "query"
          name: "gtname"
          description: "List categories greater or equal than 'gtname'"
          type: string
        - in: "query"
          name: "top"
          description: "Limit of the categories"
          type: integer
          minimum: 1
          maximum: 100
      responses:
        "200":
          description: "Successful request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CategoryLink"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
  /entes:
    post:
      tags:
        - "ente"
      summary: "Add a new ente to the space"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Ente object that needs to be added to the space"
          required: true
          schema:
            $ref: "#/definitions/EnteReq"
      responses:
        "201":
          description: "Ente created"
          schema:
            $ref: "#/definitions/Ente"
        "302":
          description: "Ente found"
        "400":
          description: "Invalid input"
        "404":
          description: "Space not found"
        "500":
          description: "Internal server error"
  /entes/{id}:
    put:
      tags:
        - "ente"
      summary: "If the ente ID exists is updated otherwise is added."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Ente identifier"
          type: string
          required: true
        - in: "body"
          name: "body"
          description: "Ente object that needs to be added or updated to the space"
          required: true
          schema:
            $ref: "#/definitions/EnteReq"
      responses:
        "200":
          description: "Ente updated"
          schema:
            $ref: "#/definitions/Ente"
        "201":
          description: "Ente created"
          schema:
            $ref: "#/definitions/Ente"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
    get:
      tags:
        - "ente"
      summary: "Find ente by ID"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Ente identifier"
          type: string
          required: true
      responses:
        "200":
          description: "Ente found"
          schema:
            $ref: "#/definitions/Ente"
        "400":
          description: "Invalid input"
        "404":
          description: "Ente not found"
        "500":
          description: "Internal server error"
  /entes/{id}/properties:
    get:
      tags:
        - "ente"
      summary: "List properties of the ente by ID"
      description: "The 'sname' and 'gtname' query parameters are exclusive. The 'top' query parameter must be between 1 and 100."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Ente identifier"
          type: string
          required: true
        - in: "query"
          name: "sname"
          description: "List ente properties that start by 'sname'"
          type: string
        - in: "query"
          name: "gtname"
          description: "List ente properties greater or equal than 'gtname'"
          type: string
        - in: "query"
          name: "top"
          description: "Limit of properties"
          type: integer
          minimum: 1
          maximum: 100
      responses:
        "200":
          description: "Successful request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EntePropLink"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
  /entes/{enteid}/linktocategories/{categoryid}:
    put:
      tags:
        - "ente"
      summary: "Links a ente with a category."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "enteid"
          description: "Ente identifier"
          type: string
          required: true
        - in: "path"
          name: "categoryid"
          description: "Category identifier"
          type: string
          required: true
      responses:
        "200":
          description: "Ente linked"
          schema:
            $ref: "#/definitions/HierarchyLink"
        "400":
          description: "Invalid input"
        "404":
          description: "Ente or category not found"
        "500":
          description: "Internal server error"
  /entesproperties:
    post:
      tags:
        - "enteprop"
      summary: "Add a new property to the ente"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "The property object that needs to be added to the ente"
          required: true
          schema:
            $ref: "#/definitions/EntePropReq"
      responses:
        "201":
          description: "Ente property created"
          schema:
            $ref: "#/definitions/EnteProp"
        "302":
          description: "Ente property found"
        "400":
          description: "Invalid input"
        "404":
          description: "Ente not found"
        "500":
          description: "Internal server error"
  /entesproperties/{id}:
    put:
      tags:
        - "enteprop"
      summary: "If the ente property ID exists is updated otherwise is added."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Ente property identifier"
          type: string
          required: true
        - in: "body"
          name: "body"
          description: "Ente property object that needs to be added or updated to the ente"
          required: true
          schema:
            $ref: "#/definitions/EntePropReq"
      responses:
        "200":
          description: "Ente property updated"
          schema:
            $ref: "#/definitions/EnteProp"
        "201":
          description: "Ente property created"
          schema:
            $ref: "#/definitions/EnteProp"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
    get:
      tags:
        - "enteprop"
      summary: "Find ente property by ID"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Ente property identifier"
          type: string
          required: true
      responses:
        "200":
          description: "Ente property found"
          schema:
            $ref: "#/definitions/EnteProp"
        "400":
          description: "Invalid input"
        "404":
          description: "Ente property not found"
        "500":
          description: "Internal server error"
  /categories:
    post:
      tags:
        - "category"
      summary: "Add a new category to the space or other category hierarchily depending of 'root' field"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Category object that needs to be added to the space or other category"
          required: true
          schema:
            $ref: "#/definitions/CategoryReq"
      responses:
        "201":
          description: "Category created"
          schema:
            $ref: "#/definitions/Category"
        "302":
          description: "Category found"
        "400":
          description: "Invalid input"
        "404":
          description: "Space or category not found"
        "500":
          description: "Internal server error"
  /categories/{id}:
    put:
      tags:
        - "category"
      summary: "If the category ID exists is updated otherwise is added. Use the field 'root' to indicate if the category belongs to a space or other category"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Category identifier"
          type: string
          required: true
        - in: "body"
          name: "body"
          description: "CAtegory object that needs to be added or updated to the space or other category"
          required: true
          schema:
            $ref: "#/definitions/CategoryReq"
      responses:
        "200":
          description: "Category updated"
          schema:
            $ref: "#/definitions/Category"
        "201":
          description: "Category created"
          schema:
            $ref: "#/definitions/Category"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
    get:
      tags:
        - "category"
      summary: "Find category by ID"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Category identifier"
          type: string
          required: true
      responses:
        "200":
          description: "Category found"
          schema:
            $ref: "#/definitions/Category"
        "400":
          description: "Invalid input"
        "404":
          description: "Category not found"
        "500":
          description: "Internal server error"
  /categories/{id}/child:
    get:
      tags:
        - "category"
      summary: "List categories or entes of the category by ID"
      description: "The 'sname' and 'gtname' query parameters are exclusive. The 'top' query parameter must be between 1 and 100."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Category identifier"
          type: string
          required: true
        - in: "query"
          name: "sname"
          description: "List categories that start by 'sname'"
          type: string
        - in: "query"
          name: "gtname"
          description: "List categories greater or equal than 'gtname'"
          type: string
        - in: "query"
          name: "top"
          description: "Limit of the categories"
          type: integer
          minimum: 1
          maximum: 100
      responses:
        "200":
          description: "Successful request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HierarchyLink"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
  /categories/{id}/properties:
    get:
      tags:
        - "category"
      summary: "List properties of the category by ID"
      description: "The 'sname' and 'gtname' query parameters are exclusive. The 'top' query parameter must be between 1 and 100."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Category identifier"
          type: string
          required: true
        - in: "query"
          name: "sname"
          description: "List category properties that start by 'sname'"
          type: string
        - in: "query"
          name: "gtname"
          description: "List category properties greater or equal than 'gtname'"
          type: string
        - in: "query"
          name: "top"
          description: "Limit of properties"
          type: integer
          minimum: 1
          maximum: 100
      responses:
        "200":
          description: "Successful request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CategoryPropLink"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
  /categoriesproperties:
    post:
      tags:
        - "categoryprop"
      summary: "Add a new property to the category"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "The property object that needs to be added to the category"
          required: true
          schema:
            $ref: "#/definitions/CategoryPropReq"
      responses:
        "201":
          description: "CAtegory property created"
          schema:
            $ref: "#/definitions/CategoryProp"
        "302":
          description: "Category property found"
        "400":
          description: "Invalid input"
        "404":
          description: "Ente not found"
        "500":
          description: "Internal server error"
  /categoriesproperties/{id}:
    put:
      tags:
        - "categoryprop"
      summary: "If the category property ID exists is updated otherwise is added."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Category property identifier"
          type: string
          required: true
        - in: "body"
          name: "body"
          description: "Category property object that needs to be added or updated to the category"
          required: true
          schema:
            $ref: "#/definitions/CategoryPropReq"
      responses:
        "200":
          description: "Category property updated"
          schema:
            $ref: "#/definitions/EnteProp"
        "201":
          description: "Category property created"
          schema:
            $ref: "#/definitions/CategoryProp"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
    get:
      tags:
        - "categoryprop"
      summary: "Find category property by ID"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Category property identifier"
          type: string
          required: true
      responses:
        "200":
          description: "Category property found"
          schema:
            $ref: "#/definitions/CategoryProp"
        "400":
          description: "Invalid input"
        "404":
          description: "Category property not found"
        "500":
          description: "Internal server error"
  /categoriesproperties/{catpropid}/linkto/{propId}:
    put:
      tags:
        - "categoryprop"
      summary: "Links a category property with other category or ente property."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "catpropid"
          description: "Category property identifier"
          type: string
          required: true
        - in: "path"
          name: "propId"
          description: "Category or ente property identifier for linking"
          type: string
          required: true
      responses:
        "200":
          description: "Property linked"
          schema:
            $ref: "#/definitions/PropertyLink"
        "400":
          description: "Invalid input or the category of the target property (category or ente property) must be child of the category of the property for linking"
        "409":
          description: "The target property (category or ente property) must be of the same type than the category property for linking"
        "500":
          description: "Internal server error"
  /plugins/queries:
    post:
      tags:
        - "queryplugin"
      summary: "Add a new query plugin to the platform"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Query plugin object that needs to be added to the platform"
          required: true
          schema:
            $ref: "#/definitions/PluginReq"
      responses:
        "201":
          description: "Query plugin created"
          schema:
            $ref: "#/definitions/Plugin"
        "302":
          description: "Query plugin found"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
  /plugins/queries/{id}:
    put:
      tags:
        - "queryplugin"
      summary: "If the query plugin ID exists is updated otherwise is added."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Query plugin identifier"
          type: string
          required: true
        - in: "body"
          name: "body"
          description: "Query plugin object that needs to be added or updated to the platform"
          required: true
          schema:
            $ref: "#/definitions/PluginReq"
      responses:
        "200":
          description: "Query plugin updated"
          schema:
            $ref: "#/definitions/Plugin"
        "201":
          description: "Query plugin created"
          schema:
            $ref: "#/definitions/Plugin"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
    get:
      tags:
        - "queryplugin"
      summary: "Find query plugin by ID"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "Query plugin identifier"
          type: string
          required: true
      responses:
        "200":
          description: "Query plugin found"
          schema:
            $ref: "#/definitions/Plugin"
        "400":
          description: "Invalid input"
        "404":
          description: "Query plugin not found"
        "500":
          description: "Internal server error"
  /api/plugins/queries:
    get:
      tags:
        - "queryplugin"
      summary: "List properties of the ente by ID"
      description: "The 'sname' and 'gtname' query parameters are exclusive. The 'top' query parameter must be between 1 and 100."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "sname"
          description: "List queries plugin that start by 'sname'"
          type: string
        - in: "query"
          name: "gtname"
          description: "List queries plugin greater or equal than 'gtname'"
          type: string
        - in: "query"
          name: "top"
          description: "Limit of queries"
          type: integer
          minimum: 1
          maximum: 100
      responses:
        "200":
          description: "Successful request"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PluginLink"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal server error"
definitions:
  Instance:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Instance identifier"
      name:
        type: "string"
        description: "Instance name"
      description:
        type: "string"
        description: "Instance description"
  InstanceReq:
    type: "object"
    required:
      - "name"
      - "description"
    properties:
      name:
        type: "string"
        maxLength: 50
        description: "Instance name"
      description:
        type: "string"
        maxLength: 500
        description: "Instance description"
  Space:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Space identifier"
      name:
        type: "string"
        description: "Space name"
      description:
        type: "string"
        description: "Space description"
      instanceId:
        type: "string"
        description: "Instance identifier where the space has been added"
  SpaceReq:
    type: "object"
    required:
      - "name"
      - "description"
    properties:
      name:
        type: "string"
        maxLength: 50
        description: "Space name"
      description:
        type: "string"
        maxLength: 500
        description: "Space description"
      instanceId:
        type: "string"
        description: "Instance identifier where the space is added"
  SpaceLink:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Space name"
      spaceId:
        type: "string"
        description: "Space identifier"
  Ente:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Ente identifier"
      name:
        type: "string"
        description: "Ente name"
      description:
        type: "string"
        description: "Ente description"
      spaceId:
        type: "string"
        description: "Space identifier where the ente has been added"
  EnteReq:
    type: "object"
    required:
      - "name"
      - "description"
    properties:
      name:
        type: "string"
        maxLength: 50
        description: "Ente name"
      description:
        type: "string"
        maxLength: 500
        description: "Ente description"
      spaceId:
        type: "string"
        description: "Space identifier where the ente is added"
  EnteLink:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Ente name"
      enteId:
        type: "string"
        description: "Ente identifier"
  EnteProp:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Ente property identifier"
      name:
        type: "string"
        description: "Ente property name"
      description:
        type: "string"
        description: "Ente property description"
      enteId:
        type: "string"
        description: "Ente identifier where the ente property has been added"
      type:
        type: "integer"
        description: "Type of field: (Integer=1, Decimal=2, Boolean=3, DateTime=4)"
  EntePropReq:
    type: "object"
    required:
      - "name"
      - "description"
    properties:
      name:
        type: "string"
        maxLength: 50
        description: "Ente property name"
      description:
        type: "string"
        maxLength: 500
        description: "Ente property description"
      enteId:
        type: "string"
        description: "Ente identifier where the ente property is added"
      type:
        type: "integer"
        description: "Type of field. See the description in EnteProp"
  EntePropLink:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Ente property name"
      entePropId:
        type: "string"
        description: "Ente property identifier"
  Category:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Category identifier"
      name:
        type: "string"
        description: "Category name"
      description:
        type: "string"
        description: "Category description"
      root:
        type: "boolean"
        description: "If the category is root, the container is a space, otherwise the container is other parent container"
      parentId:
        type: "string"
        description: "Parent identifier where the category where is added. If the 'root' is true, parentId contains the space identifier, otherwise parentId contains the parent category identifier"
  CategoryReq:
    type: "object"
    required:
      - "name"
      - "description"
      - "root"
    properties:
      name:
        type: "string"
        maxLength: 50
        description: "Ente name"
      description:
        type: "string"
        maxLength: 500
        description: "Ente description"
      root:
        type: "boolean"
        description: "If the category is root, the container will be a space, otherwise the container will be a parent container"
      parentId:
        type: "string"
        description: "Parent identifier where the category is added. If the 'root' is true, parentId contains the space identifier, otherwise parentId contains the parent category identifier"
  CategoryLink:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Space name"
      categoryId:
        type: "string"
        description: "Root category identifier"
  HierarchyLink:
    type: "object"
    properties:
      name:
        type: "string"
        description: "If the category is true the name is the category name otherwise the name is the ente name"
      category:
        type: "boolean"
        description: "If category is true, the linkId links a category otherwise it links a ente"
      linkId:
        type: "string"
        description: "Link identifier where the category or ente is added. If the 'category' is true, linkId contains the category identifier, otherwise linkId contains the ente identifier"
  CategoryProp:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Category property identifier"
      name:
        type: "string"
        description: "Category property name"
      description:
        type: "string"
        description: "Category property description"
      categoryId:
        type: "string"
        description: "Category identifier where the category property has been added"
      type:
        type: "integer"
        description: "Type of field: (None=0, Integer=1, Decimal=2, Boolean=3, DateTime=4)"
  CategoryPropReq:
    type: "object"
    required:
      - "name"
      - "description"
    properties:
      name:
        type: "string"
        maxLength: 50
        description: "Category property name"
      description:
        type: "string"
        maxLength: 500
        description: "Category property description"
      categoryId:
        type: "string"
        description: "Category identifier where the category property is added"
      type:
        type: "integer"
        description: "Type of field. See the description in CategoryProp"
  CategoryPropLink:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Category property name"
      categoryPropId:
        type: "string"
        description: "Category property identifier"
  PropertyLink:
    type: "object"
    properties:
      name:
        type: "string"
        description: "If the category is true the name is the category property name otherwise the name is the ente property name"
      category:
        type: "boolean"
        description: "If category is true, the propId links a category property otherwise it links a ente property"
      propId:
        type: "string"
        description: "If the 'category' is true, propId contains the category property identifier, otherwise propId contains the ente property identifier"
  Plugin:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Plugin identifier"
      name:
        type: "string"
        description: "Plugin name"
      description:
        type: "string"
        description: "Plugin description"
  PluginReq:
    type: "object"
    required:
      - "name"
      - "description"
    properties:
      name:
        type: "string"
        maxLength: 50
        description: "Plugin name"
      description:
        type: "string"
        maxLength: 500
        description: "Plugin description"
  PluginLink:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Plugin name"
      protoId:
        type: "string"
        description: "Plugin identifier"
      category:
        type: "string"
        description: "The type of plugin (query)"